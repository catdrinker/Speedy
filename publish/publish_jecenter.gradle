apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
version = "1.0"

dependencies {
    classpath 'com.android.tools.build:gradle:3.6.1'
    classpath 'com.github.dcendents:android-maven-plugin:1.2'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
}

def siteUrl = 'https://github.com/catdrinker/Speedy'      // 项目的主页
def gitUrl ='https://github.com/catdrinker/Speedy.git'   // Git仓库的url
group = "com.speedy.drinker"
// 根节点添加
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                name 'Speedy'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'core'
                        name 'cat drinker'
                        email 'panhotfix@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

//添加UTF-8编码否则注释可能JAVADOC文档可能生成不了
javadoc {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
        title "SpeedyJavaDoc"
    }
}

task uploadJecenter{
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    bintray {
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.apikey")
        configurations = ['archives']
        pkg {
            repo = "maven"
            name = "Speedy"                // project name in jcenter
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = ["Apache-2.0"]
            publish = true
        }
        //Optional configuration for Maven Central sync of the version
        mavenCentralSync {
            sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
            user = 'userToken' //OSS user token
            password = 'paasword' //OSS user password
            close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
        }
    }
}

